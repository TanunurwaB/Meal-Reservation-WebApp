const express = require('express');
const sql = require('mssql');
const jwt = require('jsonwebtoken'); // Import JWT for token verification
const router = express.Router();
const sqlConfig = require('./config'); // Import your SQL config

// Middleware to verify JWT token
const verifyToken = (req, res, next) => {
    const token = req.headers['authorization']?.split(' ')[1]; // Get token from Authorization header

    if (!token) {
        return res.status(403).json({ message: 'No token provided' });
    }

    jwt.verify(token, process.env.JWT_SECRET, (err, decoded) => {
        if (err) {
            return res.status(401).json({ message: 'Unauthorized' });
        }
        req.user = decoded; // Save decoded user info to request object
        next(); // Proceed to the next middleware or route handler
    });
};

// Fetch meals endpoint
router.get('/', verifyToken, async (req, res) => {
    try {
        await sql.connect(sqlConfig);
        console.log('Connected to the database successfully!');
        const result = await sql.query`SELECT * FROM Meals`; // Adjust the query as needed
        res.json(result.recordset); // Send the meals data as JSON
    } catch (error) {
        console.error('Error fetching meals:', error);
        res.status(500).json({ message: 'Error fetching meals' });
    } finally {
        await sql.close();
    }
});

module.exports = router;