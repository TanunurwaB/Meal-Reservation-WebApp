const express = require('express');
const sql = require('mssql');
const bcrypt = require('bcrypt');
const router = express.Router();
const sqlConfig = require('./config'); // Import your SQL config

// Sign-in endpoint
router.post('/', async (req, res) => {
    const { email, password } = req.body;

    // Validate input
    if (!email || !password) {
        return res.status(400).json({ message: 'Email and password are required' });
    }

    try {
        // Connect to the database
        await sql.connect(sqlConfig);
        console.log('Connected to the database successfully!');

        // Query to find the user by email
        const result = await sql.query`SELECT * FROM Users WHERE email = ${email}`;

        // Check if a user was found
        if (result.recordset.length === 0) {
            return res.status(401).json({ message: 'Invalid email or password' });
        }

        const user = result.recordset[0];

        // Compare the provided password with the stored hashed password
        const isPasswordValid = await bcrypt.compare(password, user.password);
        if (!isPasswordValid) {
            return res.status(401).json({ message: 'Invalid email or password' });
        }

        // Return success response with user info (no token)
        res.status(200).json({ message: 'Sign in successful!', user: { id: user.id, email: user.email, username: user.username } });
    } catch (error) {
        console.error('Database connection failed:', error);
        console.error('Error during sign in:', error);
        res.status(500).json({ message: 'Sign in failed' });
    } finally {
        // Close the database connection
        await sql.close();
    }
});

module.exports = router;