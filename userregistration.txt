import React, { useState } from 'react';
import { register } from '../api.js'; // Import the register function from the API
import { useNavigate } from 'react-router-dom'; // Import useNavigate
import './User Registration.css'; // Import the CSS file for styling

const UserRegistration = () => {
  const [username, setUsername] = useState('');
  const [email, setEmail] = useState(''); // State for email
  const [phone, setPhone] = useState(''); // State for phone
  const [password, setPassword] = useState(''); // State for password
  const [category, setCategory] = useState(''); // State for category
  const [loading, setLoading] = useState(false); // State for loading
  const navigate = useNavigate(); // Initialize useNavigate

  const handleSubmit = async (e) => {
    e.preventDefault(); // Prevent default form submission
    const userData = { username, email, password, phone, category }; // Prepare user data

    // Basic validation
    if (!validateEmail(email)) {
      alert('Please enter a valid email address.');
      return;
    }

    if (!validatePhone(phone)) {
      alert('Please enter a valid phone number.');
      return;
    }

    setLoading(true); // Set loading state to true

    try {
      const response = await register(userData); // Call the register API

      if (response.status === 201) { // Check for successful registration
        alert('Registration successful!');
        console.log('User  data:', response.data.user);
        navigate('/login'); // Redirect to login after successful registration
      } else {
        alert('Registration failed! Please check your details.'); // Alert for failed registration
      }

      // Reset form fields
      setUsername('');
      setEmail('');
      setPhone('');
      setPassword('');
      setCategory('');
    } catch (error) {
      console.error('Error during registration:', error);
      alert('Registration failed! Please try again.'); // Improved error message
    } finally {
      setLoading(false); // Reset loading state
    }
  };

  const validateEmail = (email) => {
    const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/; // Simple email regex
    return re.test(String(email).toLowerCase());
  };

  const validatePhone = (phone) => {
    const re = /^\d{10}$/; // Simple phone number regex (10 digits)
    return re.test(String(phone));
  };

  return (
    <div className="registration-container">
      <h2>Register and Join the Community</h2>
      <form onSubmit={handleSubmit} className="registration-form">
        <input
          type="text"
          placeholder="Username"
          value={username}
          onChange={(e) => setUsername(e.target.value)}
          required
        />
        <input
          type="email"
          placeholder="Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
        />
        <input
          type="password"
          placeholder="Password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          required
        />
        <input
          type="text"
          placeholder="Phone (10 digits)"
          value={phone}
          onChange={(e) => setPhone(e.target.value)}
          required
        />
        <select value={category} onChange={(e) => setCategory(e.target.value)} required>
          <option value="" disabled>Select Category</option>
          <option value="Personal">Personal</option>
          <option value="Business">Business</option>
        </select>
        <button type="submit" className="btn" disabled={loading}>
          {loading ? 'Registering...' : 'Register'}
        </button>
      </form>
      <p className="login-prompt">
        Already have an account? <button onClick={() => navigate('/login')} className="link-btn">Sign In</button>
      </p>
    </div>
  );
};

export default UserRegistration;